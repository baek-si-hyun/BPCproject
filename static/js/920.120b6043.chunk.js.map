{"version":3,"file":"static/js/920.120b6043.chunk.js","mappings":"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","sources":["pages/coin_exchange/ExchangeCharts.tsx","pages/coin_exchange/CoinExchange.tsx"],"sourcesContent":["import { createChart, ColorType } from \"lightweight-charts\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { IChartData } from \"../../interface/iExchangeChart\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChartComponent = (props: IChartData) => {\r\n  const isDarkMode = useSelector(\r\n    (state: { toggleMode: boolean }) => state.toggleMode\r\n  );\r\n\r\n  const { data } = props.chartData;\r\n\r\n  const chartContainerRef = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (chartContainerRef.current) {\r\n        chart.applyOptions({ width: chartContainerRef.current.clientWidth });\r\n      }\r\n    };\r\n\r\n    const chart = createChart(chartContainerRef.current!, {\r\n      layout: {\r\n        background: {\r\n          type: ColorType.Solid,\r\n          color: isDarkMode ? \"#3b3b3b\" : \"#fff\",\r\n        },\r\n        textColor: isDarkMode ? \"#fff\" : \"#222\",\r\n      },\r\n      rightPriceScale: {\r\n        scaleMargins: {\r\n          top: 0.35,\r\n          bottom: 0.2,\r\n        },\r\n        borderVisible: false,\r\n      },\r\n      timeScale: {\r\n        borderVisible: false,\r\n      },\r\n      watermark: {\r\n        color: \"rgba(255, 255, 255,1)\",\r\n      },\r\n      grid: {\r\n        vertLines: {\r\n          visible: false,\r\n        },\r\n        horzLines: {\r\n          visible: false,\r\n        },\r\n      },\r\n      crosshair: {\r\n        vertLine: {\r\n          visible: true,\r\n          color: isDarkMode ? \"rgba(255, 255, 255, 0.7)\" : \"rgba(2, 2, 2, 0.7)\",\r\n        },\r\n        horzLine: {\r\n          visible: true,\r\n          color: isDarkMode ? \"rgba(255, 255, 255, 0.7)\" : \"rgba(2, 2, 2, 0.7)\",\r\n        },\r\n      },\r\n      width: (chartContainerRef.current?.clientWidth ?? 0) - 16,\r\n      height: 450,\r\n    });\r\n    chart.timeScale().fitContent();\r\n\r\n    const newSeries = chart.addAreaSeries({\r\n      topColor: isDarkMode ? \"rgba(150, 0, 0, 0.4)\" : \"rgba(19, 68, 193, 0.4)\",\r\n      bottomColor: isDarkMode ? \"rgba(2, 2, 2, 0.0)\" : \"rgba(0, 120, 255, 0.0)\",\r\n      lineColor: isDarkMode ? \"rgba(150, 0, 0, 1.0)\" : \"rgba(19, 40, 153, 1.0)\",\r\n      lineWidth: 3,\r\n    });\r\n    newSeries.setData(data);\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      if (chartContainerRef.current) {\r\n        chart.remove();\r\n      }\r\n    };\r\n  }, [data, isDarkMode]);\r\n\r\n  return <div ref={chartContainerRef} />;\r\n};\r\n\r\nfunction ExchangeCharts(props: IChartData) {\r\n  return <ChartComponent {...props} />;\r\n}\r\n\r\nexport default ExchangeCharts;\r\n","import styled from \"styled-components\";\r\nimport ExchangeCharts from \"./ExchangeCharts\";\r\nimport { exchangeChartData } from \"../../api/datalist\";\r\n\r\nconst CoinExchangeContainer = styled.div``;\r\nconst CoinExchangeInner = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1rem;\r\n`;\r\nexport const ExchangeChartContainer = styled.div`\r\n  background-color: ${(props) => props.theme.cardColor};\r\n  border-radius: 12px;\r\n  padding: 1rem;\r\n  box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.15);\r\n`;\r\nconst ExchangeChartInner = styled.div`\r\n  background-color: transparent;\r\n`;\r\nconst ExchangeChartHeader = styled.div`\r\n  display: flex;\r\n`;\r\nconst ChartInformation = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n`;\r\nconst ExchangeName = styled.div`\r\n  text-transform: uppercase;\r\n  font-size: 26px;\r\n`;\r\nconst SeletedCoin = styled.div`\r\n  font-size: 22px;\r\n`;\r\n\r\nfunction CoinExchange() {\r\n  return (\r\n    <CoinExchangeContainer>\r\n      <CoinExchangeInner>\r\n        {exchangeChartData &&\r\n          exchangeChartData.map((item, index) => (\r\n            <ExchangeChartContainer key={index}>\r\n              <ExchangeChartInner>\r\n                <ExchangeChartHeader>\r\n                  <ChartInformation>\r\n                    <ExchangeName>{item.exchange}</ExchangeName>\r\n                    <SeletedCoin>BitCoin</SeletedCoin>\r\n                  </ChartInformation>\r\n                </ExchangeChartHeader>\r\n                <ExchangeCharts\r\n                  key={index}\r\n                  chartData={{\r\n                    data: item.history,\r\n                  }}\r\n                />\r\n              </ExchangeChartInner>\r\n            </ExchangeChartContainer>\r\n          ))}\r\n      </CoinExchangeInner>\r\n    </CoinExchangeContainer>\r\n  );\r\n}\r\n\r\nexport default CoinExchange;\r\n"],"names":["ChartComponent","props","isDarkMode","useSelector","state","toggleMode","data","chartData","chartContainerRef","useRef","useEffect","_chartContainerRef$cu","_chartContainerRef$cu2","handleResize","current","chart","applyOptions","width","clientWidth","createChart","layout","background","type","ColorType","Solid","color","textColor","rightPriceScale","scaleMargins","top","bottom","borderVisible","timeScale","watermark","grid","vertLines","visible","horzLines","crosshair","vertLine","horzLine","height","fitContent","addAreaSeries","topColor","bottomColor","lineColor","lineWidth","setData","window","addEventListener","removeEventListener","remove","_jsx","ref","_objectSpread","CoinExchangeContainer","styled","div","_templateObject","_taggedTemplateLiteral","CoinExchangeInner","_templateObject2","ExchangeChartContainer","_templateObject3","theme","cardColor","ExchangeChartInner","_templateObject4","ExchangeChartHeader","_templateObject5","ChartInformation","_templateObject6","ExchangeName","_templateObject7","SeletedCoin","_templateObject8","children","exchangeChartData","map","item","index","_jsxs","exchange","ExchangeCharts","history"],"sourceRoot":""}