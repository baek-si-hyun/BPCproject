{"version":3,"file":"static/js/389.1b9c8e00.chunk.js","mappings":"0MAOMA,EAAmBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAC7BC,EAAeJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,QAqD/B,UAnDA,WACE,IAAMG,GAAYC,EAAAA,EAAAA,KAChB,SAACC,GAA4B,OAAKA,EAAMF,SAAS,IAE7CG,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACZ,EAAgB,CAAAa,UACfD,EAAAA,EAAAA,KAACP,EAAY,CAAAQ,UACXD,EAAAA,EAAAA,KAACE,EAAAA,IAAO,CACNC,UAAU,iBACVC,MAAOT,EAAY,GACnBU,OAAoB,GAAZV,EACRW,KAAMC,EAAAA,GACNC,QACER,EAAAA,EAAAA,KAACS,EAAAA,IAAa,CACZC,UAAU,EACVC,OACEX,EAAAA,EAAAA,KAACY,EAAAA,IAAY,CACXC,MAAM,EACNC,SAAU,GACVC,WAAY,aACZC,UAAW,UAGfC,MACEjB,EAAAA,EAAAA,KAACkB,EAAAA,IAAW,CACVC,KAAK,UACLT,UAAU,EACVU,aAAc,SAACC,EAAOf,GAAU,EAChCgB,aAAc,SAACD,EAAOf,GACpB,EAEFiB,QAAS,SAACF,EAAOf,GACI,IAAfA,EAAKkB,QACPC,EAAAA,EAAAA,GAAanB,EAAMR,GAEF,IAAfQ,EAAKkB,QACPE,EAAAA,EAAAA,GAAcpB,EAAMR,EAExB,WASlB,C,8ECzDO,IAAM4B,EAAgB,SAACpB,EAAiBR,GAC7C,IAAM6B,EAASrB,EAAKsB,OAAOtB,KAAKuB,IAAM,IAAMvB,EAAKA,KAAKwB,OAASxB,EAAKA,KAAKyB,KACzEjC,EAAS,gBAADkC,OAAiBL,GAC3B,EAEaF,EAAe,SAC1BnB,EACAR,GAEA,IAAMmC,EAAQ3B,EAAKA,KAAKuB,IACxB/B,EAAS,aAADkC,OAAcC,GACxB,C","sources":["pages/coin_map/CoinMap.tsx","pages/coin_map/common/navigateFn.tsx"],"sourcesContent":["import { TreeMap, TreeMapSeries, TreeMapRect, TreeMapLabel } from \"reaviz\";\r\nimport { mapsData } from \"../../datalist\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { navCoinDetail, navMapDetail } from \"./common/navigateFn\";\r\n\r\nconst CoinMapContainer = styled.div``;\r\nconst CoinMapInner = styled.div``;\r\n\r\nfunction CoinMap() {\r\n  const viewWidth = useSelector(\r\n    (state: { viewWidth: number }) => state.viewWidth\r\n  );\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <CoinMapContainer>\r\n      <CoinMapInner>\r\n        <TreeMap\r\n          className=\"reaviz-treemap\"\r\n          width={viewWidth - 16}\r\n          height={viewWidth * 0.7}\r\n          data={mapsData}\r\n          series={\r\n            <TreeMapSeries\r\n              animated={false}\r\n              label={\r\n                <TreeMapLabel\r\n                  wrap={false}\r\n                  fontSize={16}\r\n                  fontFamily={\"Pretendard\"}\r\n                  placement={\"start\"}\r\n                />\r\n              }\r\n              rect={\r\n                <TreeMapRect\r\n                  fill=\"#000000\"\r\n                  animated={false}\r\n                  onMouseEnter={(event, data) => {}}\r\n                  onMouseLeave={(event, data) => {\r\n                    // console.log(\"onMouseLeave\", event, data);\r\n                  }}\r\n                  onClick={(event, data) => {\r\n                    if (data.depth === 1) {\r\n                      navMapDetail(data, navigate);\r\n                    }\r\n                    if (data.depth === 2) {\r\n                      navCoinDetail(data, navigate);\r\n                    }\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          }\r\n        />\r\n      </CoinMapInner>\r\n    </CoinMapContainer>\r\n  );\r\n}\r\n\r\nexport default CoinMap;\r\n","import { IMapsData } from \"../../../interface/iMaps\";\r\n\r\nexport const navCoinDetail = (data: IMapsData, navigate: any) => {\r\n  const coinid = data.parent.data.key + \":\" + data.data.symbol + data.data.unit;\r\n  navigate(`/coin-detail/${coinid}`);\r\n};\r\n\r\nexport const navMapDetail = (\r\n  data: { data: { key: string } },\r\n  navigate: any\r\n) => {\r\n  const mapId = data.data.key;\r\n  navigate(`/coin-map/${mapId}`);\r\n};\r\n"],"names":["CoinMapContainer","styled","div","_templateObject","_taggedTemplateLiteral","CoinMapInner","_templateObject2","viewWidth","useSelector","state","navigate","useNavigate","_jsx","children","TreeMap","className","width","height","data","mapsData","series","TreeMapSeries","animated","label","TreeMapLabel","wrap","fontSize","fontFamily","placement","rect","TreeMapRect","fill","onMouseEnter","event","onMouseLeave","onClick","depth","navMapDetail","navCoinDetail","coinid","parent","key","symbol","unit","concat","mapId"],"sourceRoot":""}