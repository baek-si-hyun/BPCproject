{"version":3,"file":"static/js/776.710563e7.chunk.js","mappings":"sLAMMA,EAAsBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAChCC,EAAkBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2BAyElC,UArEA,WACE,IAIIG,EAJEC,GAAaC,EAAAA,EAAAA,KACjB,SAACC,GAA8B,OAAKA,EAAMC,UAAU,IAE9CC,GAAaC,EAAAA,EAAAA,MAAbD,SAEFE,GAAkBC,EAAAA,EAAAA,UA0BxB,SAASC,IAELC,SAASC,eAAe,sBACxB,gBAAiBC,QAEjB,IAAIA,OAAOC,YAAYC,OAAO,CAC5BC,UAAU,EACVC,OAAQX,EAASY,MAAM,IACvBC,SAAU,IACVC,SAAU,aACVC,MAAOnB,EAAa,OAAS,QAC7BoB,MAAO,IACPC,OAAQ,KACRC,WAAYtB,EAAa,OAAS,OAClCuB,mBAAmB,EACnBC,qBAAqB,EACrBC,mBAAmB,EACnBC,SAAS,EACTC,aAAc,qBAGpB,CAEA,OA/CAC,EAAAA,EAAAA,YAAU,WAmBR,OAlBAtB,EAAgBuB,QAAUrB,EAErBT,IAEHA,EAAyB,IAAI+B,SAAQ,SAACC,GACpC,IAAMC,EAASvB,SAASwB,cAAc,UACtCD,EAAOE,GAAK,oCACZF,EAAOG,IAAM,mCACbH,EAAOI,KAAO,kBACdJ,EAAOK,OAAS,kBAAMN,GAAU,EAChCtB,SAAS6B,KAAKC,YAAYP,EAC5B,KAGFjC,EAAuByC,MACrB,kBAAMlC,EAAgBuB,SAAWvB,EAAgBuB,SAAS,IAGrD,WACLvB,EAAgBuB,QAAU,IAC5B,CACF,GAAG,CAAC7B,KA0BFyC,EAAAA,EAAAA,MAACjD,EAAmB,CAACkD,UAAU,+BAA8BC,SAAA,EAC3DC,EAAAA,EAAAA,KAAC/C,EAAe,CAACqC,GAAG,uBACpBU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+BAA8BC,UAC3CC,EAAAA,EAAAA,KAAA,KACEC,KAAK,8BACLC,IAAI,+BACJC,OAAO,eAKjB,C","sources":["pages/coin_detail/DataDetail.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst DataDetailContainer = styled.div``;\r\nconst DataDetailInner = styled.div`\r\n  height: 90vh;\r\n`;\r\n\r\nfunction DataDetail() {\r\n  const isDarkMode = useSelector(\r\n    (state: { toggleMode: boolean }) => state.toggleMode\r\n  );\r\n  const { pathname } = useLocation();\r\n  let tvScriptLoadingPromise: Promise<void>;\r\n  const onLoadScriptRef = useRef<(() => void) | null>();\r\n\r\n  useEffect(() => {\r\n    onLoadScriptRef.current = createWidget;\r\n\r\n    if (!tvScriptLoadingPromise) {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      tvScriptLoadingPromise = new Promise((resolve) => {\r\n        const script = document.createElement(\"script\");\r\n        script.id = \"tradingview-widget-loading-script\";\r\n        script.src = \"https://s3.tradingview.com/tv.js\";\r\n        script.type = \"text/javascript\";\r\n        script.onload = () => resolve();\r\n        document.head.appendChild(script);\r\n      });\r\n    }\r\n\r\n    tvScriptLoadingPromise.then(\r\n      () => onLoadScriptRef.current && onLoadScriptRef.current()\r\n    );\r\n\r\n    return () => {\r\n      onLoadScriptRef.current = null;\r\n    };\r\n  }, [isDarkMode]);\r\n\r\n  function createWidget(): void {\r\n    if (\r\n      document.getElementById(\"tradingview_e032d\") &&\r\n      \"TradingView\" in window\r\n    ) {\r\n      new window.TradingView.widget({\r\n        autosize: true,\r\n        symbol: pathname.slice(13),\r\n        interval: \"D\",\r\n        timezone: \"Asia/Seoul\",\r\n        theme: isDarkMode ? \"dark\" : \"light\",\r\n        style: \"1\",\r\n        locale: \"kr\",\r\n        toolbar_bg: isDarkMode ? \"#000\" : \"#fff\",\r\n        enable_publishing: false,\r\n        allow_symbol_change: false,\r\n        hide_side_toolbar: false,\r\n        details: true,\r\n        container_id: \"tradingview_e032d\",\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DataDetailContainer className=\"tradingview-widget-container\">\r\n      <DataDetailInner id=\"tradingview_e032d\" />\r\n      <div className=\"tradingview-widget-copyright\">\r\n        <a\r\n          href=\"https://kr.tradingview.com/\"\r\n          rel=\"noopener nofollow noreferrer\"\r\n          target=\"_blank\"\r\n        ></a>\r\n      </div>\r\n    </DataDetailContainer>\r\n  );\r\n}\r\n\r\nexport default DataDetail;\r\n"],"names":["DataDetailContainer","styled","div","_templateObject","_taggedTemplateLiteral","DataDetailInner","_templateObject2","tvScriptLoadingPromise","isDarkMode","useSelector","state","toggleMode","pathname","useLocation","onLoadScriptRef","useRef","createWidget","document","getElementById","window","TradingView","widget","autosize","symbol","slice","interval","timezone","theme","style","locale","toolbar_bg","enable_publishing","allow_symbol_change","hide_side_toolbar","details","container_id","useEffect","current","Promise","resolve","script","createElement","id","src","type","onload","head","appendChild","then","_jsxs","className","children","_jsx","href","rel","target"],"sourceRoot":""}