{"version":3,"file":"static/js/921.dfe87ae3.chunk.js","mappings":"8NASMA,EAAmBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAC7BC,EAAeJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,QA8D/B,UA5DA,WACE,IAAMG,GAAYC,EAAAA,EAAAA,KAChB,SAACC,GAA4B,OAAKA,EAAMF,SAAS,IAE3CG,GAAaC,EAAAA,EAAAA,MAAbD,SACRE,GAA8BC,EAAAA,EAAAA,YAAsBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,IAE1BI,EAAAA,EAAAA,YAAU,YACc,WACpB,IAAMC,EAAeC,EAAAA,GAASC,QAC5B,SAACC,GAAG,OAAKA,EAAIC,MAAQb,EAASc,MAAM,GAAG,IAEzCP,GAAW,kBAAME,CAAY,GAC/B,CACAM,EACF,GAAG,IACH,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAC5B,EAAgB,CAAA6B,UACfD,EAAAA,EAAAA,KAACvB,EAAY,CAAAwB,UACXD,EAAAA,EAAAA,KAACE,EAAAA,IAAO,CACNC,MAAOxB,EAAY,GACnByB,OAAoB,GAAZzB,EACR0B,KAAMjB,EACNkB,QACEN,EAAAA,EAAAA,KAACO,EAAAA,IAAa,CACZC,OACER,EAAAA,EAAAA,KAACS,EAAAA,IAAY,CACXC,MAAM,EACNC,SAAU,GACVC,WAAY,aACZC,UAAW,UAGfC,MACEd,EAAAA,EAAAA,KAACe,EAAAA,IAAW,CACVC,SAAShB,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,IACTC,aAAc,SAACC,EAAOd,GACpB,EAEFe,aAAc,SAACD,EAAOd,GACpB,EAEFgB,QAAS,SAACF,EAAOd,GACI,IAAfA,EAAKiB,QACPC,EAAAA,EAAAA,GAAclB,EAAMP,EAIxB,WASlB,C,8ECpEO,IAAMyB,EAAgB,SAAClB,EAAiBP,GAC7C,IAAM0B,EAASnB,EAAKoB,OAAOpB,KAAKV,IAAM,IAAMU,EAAKA,KAAKqB,OAASrB,EAAKA,KAAKsB,KACzE7B,EAAS,gBAAD8B,OAAiBJ,GAC3B,EAEaK,EAAe,SAC1BxB,EACAP,GAEA,IAAMgC,EAAQzB,EAAKA,KAAKV,IACxBG,EAAS,aAAD8B,OAAcE,GACxB,C","sources":["pages/coin_map/MapDetail.tsx","pages/coin_map/common/navigateFn.tsx"],"sourcesContent":["import { TreeMap, TreeMapSeries, TreeMapRect, TreeMapLabel } from \"reaviz\";\r\nimport { mapsData } from \"../../datalist\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { IMapData } from \"../../interface/iMaps\";\r\nimport { navCoinDetail } from \"./common/navigateFn\";\r\n\r\nconst CoinMapContainer = styled.div``;\r\nconst CoinMapInner = styled.div``;\r\n\r\nfunction MapDetail() {\r\n  const viewWidth = useSelector(\r\n    (state: { viewWidth: number }) => state.viewWidth\r\n  );\r\n  const { pathname } = useLocation();\r\n  const [mapData, setMapData] = useState<IMapData[]>();\r\n\r\n  useEffect(() => {\r\n    const handelMapData = () => {\r\n      const filteredData = mapsData.filter(\r\n        (map) => map.key === pathname.slice(10)\r\n      );\r\n      setMapData(() => filteredData);\r\n    };\r\n    handelMapData();\r\n  }, []);\r\n  const navigate = useNavigate();\r\n  return (\r\n    <CoinMapContainer>\r\n      <CoinMapInner>\r\n        <TreeMap\r\n          width={viewWidth - 16}\r\n          height={viewWidth * 0.7}\r\n          data={mapData}\r\n          series={\r\n            <TreeMapSeries\r\n              label={\r\n                <TreeMapLabel\r\n                  wrap={true}\r\n                  fontSize={16}\r\n                  fontFamily={\"Pretendard\"}\r\n                  placement={\"start\"}\r\n                />\r\n              }\r\n              rect={\r\n                <TreeMapRect\r\n                  tooltip={<></>}\r\n                  onMouseEnter={(event, data) => {\r\n                    // console.log(\"onMouseEnter\", event, data);\r\n                  }}\r\n                  onMouseLeave={(event, data) => {\r\n                    // console.log(\"onMouseLeave\", event, data);\r\n                  }}\r\n                  onClick={(event, data) => {\r\n                    if (data.depth === 2) {\r\n                      navCoinDetail(data, navigate);\r\n                    } else {\r\n                      return;\r\n                    }\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          }\r\n        />\r\n      </CoinMapInner>\r\n    </CoinMapContainer>\r\n  );\r\n}\r\n\r\nexport default MapDetail;\r\n","import { IMapsData } from \"../../../interface/iMaps\";\r\n\r\nexport const navCoinDetail = (data: IMapsData, navigate: any) => {\r\n  const coinid = data.parent.data.key + \":\" + data.data.symbol + data.data.unit;\r\n  navigate(`/coin-detail/${coinid}`);\r\n};\r\n\r\nexport const navMapDetail = (\r\n  data: { data: { key: string } },\r\n  navigate: any\r\n) => {\r\n  const mapId = data.data.key;\r\n  navigate(`/coin-map/${mapId}`);\r\n};\r\n"],"names":["CoinMapContainer","styled","div","_templateObject","_taggedTemplateLiteral","CoinMapInner","_templateObject2","viewWidth","useSelector","state","pathname","useLocation","_useState","useState","_useState2","_slicedToArray","mapData","setMapData","useEffect","filteredData","mapsData","filter","map","key","slice","handelMapData","navigate","useNavigate","_jsx","children","TreeMap","width","height","data","series","TreeMapSeries","label","TreeMapLabel","wrap","fontSize","fontFamily","placement","rect","TreeMapRect","tooltip","_Fragment","onMouseEnter","event","onMouseLeave","onClick","depth","navCoinDetail","coinid","parent","symbol","unit","concat","navMapDetail","mapId"],"sourceRoot":""}